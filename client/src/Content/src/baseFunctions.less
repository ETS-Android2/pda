@import "baseVariables.less";

.adjustIconInButton() {
    position: relative;
    top: 1px;
}

.applyEllipsis(@display: inline-block, @max_width: 100%) {
    display: @display;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    max-width: @max_width;
}

.applyCell(@display: NULL, @max_width: NULL, @width: NULL, @min_width: NULL, @padding: 10px, @vertical_align: NULL) {
    & when not (@display = NULL) {
        display: @display;
    }

    & when not (@max_width = NULL) {
        & when (ispixel(@max_width)) {
            max-width: @max_width + (@padding * 2);
        }

        & when not (ispixel(@max_width)) {
            max-width: @max_width;
        }
    }

    & when not (@width = NULL) {
        & when (ispixel(@width)) {
            width: @width + (@padding * 2);
        }

        & when not (ispixel(@width)) {
            width: @width;
        }
    }

    & when not (@min_width = NULL) {
        & when (ispixel(@min_width)) {
            min-width: @min_width + (@padding * 2);
        }

        & when not (ispixel(@min_width)) {
            min-width: @min_width;
        }
    }

    & when not (@vertical_align = NULL) {
        vertical-align: @vertical_align;
    }
}

.applyCol(@n_col, @display: NULL, @max_width: NULL, @width: NULL, @min_width: NULL, @vertical_align: NULL) {
    .famo-col-@{n_col} {
        .applyCell(@display, @max_width, @width, @min_width, 10px, @vertical_align);
    }
}

.applyIcon(@font_size, @param_line_height: NULL, @color: NULL, @position: NULL) {
    font-size: @font_size !important;

    & when not (@param_line_height = NULL) {
        line-height: @param_line_height !important;
    }

    & when (@param_line_height = NULL) {
        line-height: @line_height !important;
    }

    & when not (@color = NULL) {
        color: @color;
    }

    & when not (@position = NULL) {
        position: @position;
    }
}

.applyText(@font_style, @font_weight, @font_size, @color, @param_line_height: NULL) {
    font-family: 'Noto Sans', Calibri, 'Trebuchet MS' !important;
    font-style: @font_style !important;
    font-weight: @font_weight !important;
    font-size: @font_size !important;

    & when not (@param_line_height = NULL) {
        line-height: @param_line_height !important;
    }

    & when (@param_line_height = NULL) {
        line-height: @line_height !important;
    }

    color: @color;
}

.applySliderThumb() {
    -webkit-appearance: none;
    -moz-appearance: none;
    border: none;
    width: 16px;
    height: 16px;
    background-color: @base_color;
    cursor: pointer;
    border-radius: 50%;
}

.applyWordHyphenation() {
    .applyWordWrapping();
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -ms-hyphens: auto;
    hyphens: auto;
}

.applyWordWrapping() {
    display: inline-block;
    overflow-wrap: break-word;
    word-wrap: break-word;
    -ms-word-break: break-all;
    word-break: break-word;
}

.basePrintConfigs() {
    .famo-header {
        .famo-sidebar-button,
        .famo-user,
        .famo-navbar-button,
        .famo-signout {
            display: none !important;
        }
    }

    .famo-navbar {
        display: none;
    }

    .famo-body-wrapper {
        height: auto !important;

        .famo-sidebar {
            display: none;
        }

        .famo-body {
            overflow: visible;
        }
    }

    .famo-wrapper {
        .famo-content-scroll-top {
            overflow-x: hidden !important;

            & ~ div {
                overflow-x: hidden !important;
            }
        }

        .famo-grid {
            display: table !important;

            .famo-row {
                page-break-inside: avoid;
                break-inside: avoid;
            }
        }

        .famo-content-grid + .famo-grid-container {
            display: none !important;
        }

        .famo-files {
            &[data-view-mode="grid"] .famo-file .famo-grid + .famo-button {
                display: none !important;
            }

            .masonry-row {
                height: auto !important;

                .masonry-sizer {
                    display: none;
                }

                .masonry-item {
                    position: relative !important;
                    top: auto !important;
                    left: auto !important;
                }
            }

            .famo-file {
                page-break-inside: avoid;
                break-inside: avoid;
            }
        }
    }

    .print-hide {
        display: none !important;
    }
}

.calculateHeaderCellsWidth(@width) {
    width: @width + (@famo_header_pad * 2);
}

.changeOpacity() {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

.changePadding(@direction, @from, @to) {
    from {
        padding-@{direction}: @from;
    }

    to {
        padding-@{direction}: @to;
    }
}

.createFolderIcon() {
    span {
        .applyEllipsis();
        cursor: pointer;

        &:before {
            .createFontAwesomeIcon("\f07c", false);
            margin-right: 10px;
        }
    }

    &.collapsed span:before {
        .createFontAwesomeIcon("\f07b", false);
    }
}

.createFontAwesomeIcon(@icon_content, @is_solid: true) {
    & when not (@icon_content = NULL) {
        content: @icon_content;
    }

    display: inline-block;
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;

    & when (@is_solid = true) {
        font-weight: 900;
    }

    & when (@is_solid = false) {
        font-weight: 400;
    }

    font-style: normal;
    font-family: 'Font Awesome 5 Free';
    text-rendering: auto;
}

.createIconToCollapse() {
    @transition_duration: 0.25s;
    @turned_degrees: -90deg;

    span {
        .applyEllipsis();
        cursor: pointer;

        &:before {
            .createFontAwesomeIcon("\f078");
            margin-right: 10px;
            -webkit-transition: -webkit-transform @transition_duration;
            -moz-transition: -moz-transform @transition_duration;
            -o-transition: -o-transform @transition_duration;
            transition: transform @transition_duration;
        }
    }

    &.collapsed span:before {
        -ms-transform: rotateZ(@turned_degrees);
        -webkit-transform: rotateZ(@turned_degrees);
        -moz-transform: rotateZ(@turned_degrees);
        -o-transform: rotateZ(@turned_degrees);
        transform: rotateZ(@turned_degrees);
    }
}

.fadeUp() {
    from {
        opacity: 0;
        transform: translate3d(0, 100%, 0);
    }

    to {
        opacity: 1;
        transform: translate3d(0, 0, 0);
    }
}

.printBootstrap() {
    -webkit-box-flex: 0;
    -webkit-flex: 0 0 @famo_bootstrap_col_w;
    -ms-flex: 0 0 @famo_bootstrap_col_w;
    flex: 0 0 @famo_bootstrap_col_w;
    max-width: @famo_bootstrap_col_w;
}

.putBackgroundImg(@url_img, @repeat, @position, @size) {
    background-image: url(@url_img);
    background-repeat: @repeat;
    background-position: @position;
    background-size: @size;
}

// CSS para os botoes do slideshow e do modal.
.putButtonsForSM() {
    & > .famo-buttons {
        position: absolute;
        top: 25px;
        right: 25px;
        z-index: 120;

        .famo-button {
            .applyIcon(28px, @base_line_height, @base_color_lighten_5);
            float: right;

            &:not(:last-child) {
                margin-left: 10px;
            }
        }
    }
}

.runAnimation(@args) {
    -webkit-animation: @args;
    -moz-animation: @args;
    -o-animation: @args;
    animation: @args;
}
