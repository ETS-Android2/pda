{"version":3,"file":"app.js","sourceRoot":"","sources":["../src/app.ts"],"names":[],"mappings":";;;;;AAAA,kFAA0D;AAC1D,8DAAqC;AACrC,8DAAsC;AACtC,gDAAwB;AACxB,sDAA8B;AAC9B,sEAA6C;AAC7C,4EAA8C;AAC9C,4CAAoB;AACpB,oDAA4B;AAC5B,oDAA4B;AAC5B,gDAAwB;AACxB,sEAAsC;AACtC,iDAA6B;AAC7B,sDAA8B;AAC9B,iDAAuE;AAGvE,MAAM,GAAG,GAAG,iBAAO,EAAE,CAAC;AAGtB,MAAM,SAAS,GAAG,4BAAY,CAAC,yBAAO,CAAC,CAAC;AAGxC,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAG3B,GAAG,CAAC,GAAG,CAAC,qBAAW,EAAE,CAAC,CAAC;AAGvB,GAAG,CAAC,GAAG,CAAC,gBAAM,EAAE,CAAC,CAAC;AAGlB,GAAG,CAAC,GAAG,CAAC,cAAI,CAAC;IACT,MAAM,EAAE,IAAI;IACZ,WAAW,EAAE,IAAI;CACpB,CAAC,CAAC,CAAC;AAGJ,GAAG,CAAC,GAAG,CAAC,yBAAO,CAAC;IACZ,KAAK,EAAE,IAAI,SAAS,CAAC;QACjB,GAAG,EAAE,oBAAQ;KAChB,CAAC;IACF,MAAM,EAAE,qBAAqB;IAC7B,MAAM,EAAE;QACJ,MAAM,EAAE,oBAAQ;QAChB,QAAQ,EAAE,IAAI;QACd,MAAM,EAAE,KAAK;KAChB;IACD,KAAK,EAAE,UAAU,GAAG;QAChB,OAAO,YAAM,EAAE,CAAC;IACpB,CAAC;IACD,IAAI,EAAE,wBAAY;IAClB,iBAAiB,EAAE,KAAK;IACxB,MAAM,EAAE,KAAK;CAChB,CAAC,CAAC,CAAC;AAGJ,GAAG,CAAC,GAAG,CAAC,gBAAM,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,YAAE,CAAC,iBAAiB,CAAC,cAAI,CAAC,IAAI,CAAC,sBAAU,EAAE,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAGnH,GAAG,CAAC,GAAG,CAAC,iBAAiB,EAAE,wBAAc,CAAC,CAAC;AAG3C,GAAG,CAAC,GAAG,CAAC,yBAAc,CAAC,WAAW,CAAC;IAC/B,UAAU,EAAE;QACR,IAAI,iBAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,sBAAU,GAAG,WAAW,EAAE,CAAC;KACtE;IACD,MAAM,EAAE,iBAAO,CAAC,MAAM,CAAC,OAAO,CAC1B,iBAAO,CAAC,MAAM,CAAC,IAAI,EAAE,CACxB;IACD,GAAG,EAAE,qEAAqE;CAC7E,CAAC,CAAC,CAAC;AAGJ,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IAClB,OAAO,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC","sourcesContent":["import authentication from './controllers/authentication';\r\nimport bodyParser from 'body-parser';\r\nimport compression from 'compression';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport expressWinston from 'express-winston';\r\nimport impFileStore from 'session-file-store';\r\nimport fs from 'fs';\r\nimport helmet from 'helmet';\r\nimport morgan from 'morgan';\r\nimport path from 'path';\r\nimport session from 'express-session';\r\nimport uuidv4 from 'uuid/v4';\r\nimport winston from 'winston';\r\nimport { LOG_FOLDER, MONTH_MS, SESSION_NAME } from './utils/constants';\r\n\r\n// express\r\nconst app = express();\r\n\r\n// session-file-store\r\nconst FileStore = impFileStore(session);\r\n\r\n// bodyParser\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use(bodyParser.json());\r\n\r\n// compression\r\napp.use(compression());\r\n\r\n// helmet\r\napp.use(helmet());\r\n\r\n// cors\r\napp.use(cors({\r\n    origin: true,\r\n    credentials: true\r\n}));\r\n\r\n// session\r\napp.use(session({\r\n    store: new FileStore({\r\n        ttl: MONTH_MS\r\n    }),\r\n    secret: 'famo_pda_session_sk',\r\n    cookie: {\r\n        maxAge: MONTH_MS,\r\n        httpOnly: true,\r\n        secure: false\r\n    },\r\n    genid: function (req) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n        return uuidv4();\r\n    },\r\n    name: SESSION_NAME,\r\n    saveUninitialized: false,\r\n    resave: false\r\n}));\r\n\r\n// morgan\r\napp.use(morgan('combined', { stream: fs.createWriteStream(path.join(LOG_FOLDER, 'access.log'), { flags: 'a' }) }));\r\n\r\n// routes\r\napp.use('/Authentication', authentication);\r\n\r\n// express-winston\r\napp.use(expressWinston.errorLogger({\r\n    transports: [\r\n        new winston.transports.File({ filename: LOG_FOLDER + 'error.log' })\r\n    ],\r\n    format: winston.format.combine(\r\n        winston.format.json()\r\n    ),\r\n    msg: '{{req.method}} | {{req.url}} | {{res.statusCode}} | {{err.message}}'\r\n}));\r\n\r\n// start server\r\napp.listen(3001, () => {\r\n    console.log('Iniciar o servidor...');\r\n});"]}