{"version":3,"file":"erp.js","sourceRoot":"","sources":["../../src/controllers/erp.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAC1B,sDAA8B;AAC9B,uDAA+B;AAE/B,wCAA0C;AAC1C,oDAAiD;AACjD,8CAAqD;AACrD,0DAAiD;AAEjD,MAAM,MAAM,GAAG,iBAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,uBAAU,CAAC,CAAC;AAEvB,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IACxC,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAO,GAAG,oBAAoB,GAAG,2BAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;KACrE,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IAC9C,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAO,GAAG,0BAA0B;KAC5C,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,uBAAuB,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IACvD,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAO,GAAG,mCAAmC,GAAG,2BAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;KACpF,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,KAAK,CAAC,uBAAuB,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IACzD,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,OAAO;QACf,GAAG,EAAE,uBAAO,GAAG,mCAAmC,GAAG,2BAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;KACpF,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IAC1C,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAO,GAAG,sBAAsB,GAAG,2BAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;KACvE,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IAChD,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAO,GAAG,4BAA4B,GAAG,2BAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;KAC7E,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC,GAAQ,EAAE,GAAQ,EAAE,EAAE;IAChD,eAAK,CAAC,gBAAS,CAAC;QACZ,MAAM,EAAE,KAAK;QACb,GAAG,EAAE,uBAAO,GAAG,4BAA4B,GAAG,2BAAiB,CAAC,GAAG,CAAC,KAAK,CAAC;QAC1E,OAAO,EAAE;YACL,cAAc,EAAE,kBAAkB;SACrC;QACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;KACjC,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;QACxC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAU,EAAE,EAAE;QACpB,aAAG,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACxB,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","sourcesContent":["import axios from 'axios';\r\nimport express from 'express';\r\nimport Log from '../utils/log';\r\nimport querystring from 'querystring';\r\nimport { authorize } from '../utils/http';\r\nimport { checkToken } from '../utils/middleware';\r\nimport { createQueryString } from '../utils/general';\r\nimport { WEB_API } from '../utils/variablesRepo';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.use(checkToken);\r\n\r\nrouter.get('/Boxes', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'GET',\r\n        url: WEB_API + 'api/Navision/Boxes' + createQueryString(req.query)\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nrouter.get('/Inventories', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'GET',\r\n        url: WEB_API + 'api/Navision/Inventories'\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nrouter.get('/Inventories/Products', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'GET',\r\n        url: WEB_API + 'api/Navision/Inventories/Products' + createQueryString(req.query)\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nrouter.patch('/Inventories/Products', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'PATCH',\r\n        url: WEB_API + 'api/Navision/Inventories/Products' + createQueryString(req.query)\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nrouter.get('/Pallets', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'GET',\r\n        url: WEB_API + 'api/Navision/Pallets' + createQueryString(req.query)\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nrouter.get('/Pallets/Boxes', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'GET',\r\n        url: WEB_API + 'api/Navision/Pallets/Boxes' + createQueryString(req.query)\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nrouter.put('/Pallets/Boxes', (req: any, res: any) => {\r\n    axios(authorize({\r\n        method: 'PUT',\r\n        url: WEB_API + 'api/Navision/Pallets/Boxes' + createQueryString(req.query),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        data: JSON.stringify(req.body)\r\n    }, req.session.token)).then((wsSucc: any) => {\r\n        res.send(wsSucc.data);\r\n    }).catch((wsErr: any) => {\r\n        Log.promiseError(wsErr);\r\n        res.status(wsErr.response.status).send();\r\n    });\r\n});\r\n\r\nexport default router;"]}