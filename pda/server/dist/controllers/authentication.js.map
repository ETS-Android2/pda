{"version":3,"file":"authentication.js","sourceRoot":"","sources":["../../src/controllers/authentication.ts"],"names":[],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport express from 'express';\r\nimport httpStatus from 'http-status';\r\nimport Log from '../utils/log';\r\nimport querystring from 'querystring';\r\nimport { checkToken } from '../utils/middleware';\r\nimport { SESSION_NAME, WEB_API } from '../utils/variablesRepo';\r\n\r\nconst router = express.Router();\r\n\r\nfunction getAuthUser(accessToken: string, username: string) {\r\n    return axios({\r\n        method: 'POST',\r\n        url: WEB_API + 'api/Authorization/PDA',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'bearer ' + accessToken\r\n        },\r\n        data: {\r\n            username: username\r\n        }\r\n    });\r\n}\r\n\r\nfunction signIn(req: any, res: any, username: string = null, password: string = null) {\r\n    axios({\r\n        method: 'POST',\r\n        url: WEB_API + 'token',\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        },\r\n        data: querystring.stringify({\r\n            grant_type: 'password', // eslint-disable-line @typescript-eslint/camelcase\r\n            username: !username ? req.body.username : username,\r\n            password: !password ? req.body.password : password\r\n        })\r\n    }).then((tokenRes: any) => {\r\n        getAuthUser(tokenRes.data.access_token, !username ? req.body.username : username).then((userAuthRes: any) => {\r\n            req.session.token = tokenRes.data;\r\n            req.session.authUser = userAuthRes.data;\r\n\r\n            res.send(userAuthRes.data);\r\n        }).catch((userErr: any) => {\r\n            Log.promiseError(userErr);\r\n            res.status(userErr.response ? userErr.response.status : httpStatus.INTERNAL_SERVER_ERROR).send();\r\n        });\r\n    }).catch((tokenErr: any) => {\r\n        Log.promiseError(tokenErr);\r\n        res.status(tokenErr.response ? tokenErr.response.status : httpStatus.INTERNAL_SERVER_ERROR).send();\r\n    });\r\n}\r\n\r\nrouter.post('/SignIn', (req: any, res: any) => {\r\n    signIn(req, res);\r\n});\r\n\r\nrouter.get('/AutoSignIn', (req: any, res: any) => {\r\n    signIn(req, res, 'nodejs', 'nodejs');\r\n});\r\n\r\nrouter.get('/SignOut', (req: any, res: any) => {\r\n    const sessionID = req.sessionID;\r\n\r\n    req.sessionStore.destroy(sessionID, (err: any) => {\r\n        if (err) {\r\n            Log.error(err.message, err.stack, { method: req.method, url: req.path, statusCode: httpStatus.INTERNAL_SERVER_ERROR });\r\n            res.status(httpStatus.INTERNAL_SERVER_ERROR).send();\r\n        }\r\n        else {\r\n            res.clearCookie(SESSION_NAME);\r\n            res.send();\r\n        }\r\n    });\r\n});\r\n\r\nrouter.get('/Session/User', checkToken, (req: any, res: any) => {\r\n    const authUser = req.session.authUser;\r\n\r\n    if (authUser) {\r\n        res.send(authUser);\r\n    }\r\n    else {\r\n        res.status(httpStatus.NO_CONTENT).send();\r\n    }\r\n});\r\n\r\nexport default router;"]}